<<<<<<< HEAD
# Generated by Django 2.1.3 on 2018-12-17 13:16

from django.db import migrations, models
import django.db.models.deletion
=======
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
# Generated by Django 2.1.3 on 2018-12-17 10:21

from django.db import migrations, models
import django.db.models.deletion
=======
=======
>>>>>>> feat(articals): Users can create articles
=======
>>>>>>> feat(articals): Users can create articles
=======
>>>>>>> feat(like_dislike): add model and serializer classes
<<<<<<< HEAD


from django.db import migrations, models
=======
# Generated by Django 2.1.3 on 2018-12-11 07:32
=======
# Generated by Django 2.1.3 on 2018-12-13 07:18
=======
=======
>>>>>>> feat(like_dislike): add model and serializer classes
# Generated by Django 2.1.3 on 2018-12-13 07:18
=======
# Generated by Django 2.1.3 on 2018-12-12 08:51
>>>>>>> feat(articals): Users can create articles
<<<<<<< HEAD
>>>>>>> feat(articals): Users can create articles

from django.db import migrations, models
import django.db.models.deletion
>>>>>>> feat(Articles): Users can can create articles
<<<<<<< HEAD
>>>>>>> feat(Articles): Users can can create articles
=======
=======
=======
# Generated by Django 2.1.3 on 2018-12-12 19:30
>>>>>>> feat(like_dislike): add model and serializer classes

from django.db import migrations, models
>>>>>>> feat(like_dislike): add model and serializer classes
>>>>>>> feat(like_dislike): add model and serializer classes
>>>>>>> feat(like_dislike): add model and serializer classes


class Migration(migrations.Migration):

    initial = True

    dependencies = [
<<<<<<< HEAD
=======
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
=======
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
>>>>>>> feat(Articles): Users can can create articles
=======
        ('profiles', '0001_initial'),
>>>>>>> feat(articals): Users can create articles
=======
>>>>>>> feat(like_dislike): add model and serializer classes
>>>>>>> feat(like_dislike): add model and serializer classes
    ]

    operations = [
        migrations.CreateModel(
            name='Article',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(db_index=True, max_length=255)),
                ('body', models.TextField(db_index=True)),
                ('description', models.CharField(db_index=True, max_length=255, null=True)),
                ('slug', models.SlugField(max_length=255, unique=True)),
                ('published', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
<<<<<<< HEAD
                ('favourited', models.BooleanField(default=False)),
                ('favouriteCount', models.IntegerField(default=0)),
=======
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
                ('favourited', models.BooleanField(default=False)),
                ('favouriteCount', models.IntegerField(default=0)),
=======
=======
>>>>>>> feat(articals): Users can create articles
=======
>>>>>>> feat(like_dislike): add model and serializer classes
<<<<<<< HEAD
=======
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
>>>>>>> feat(Articles): Users can can create articles
<<<<<<< HEAD
>>>>>>> feat(Articles): Users can can create articles
=======
=======
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='profiles.Profile')),
>>>>>>> feat(articals): Users can create articles
<<<<<<< HEAD
>>>>>>> feat(articals): Users can create articles
=======
=======
>>>>>>> feat(like_dislike): add model and serializer classes
>>>>>>> feat(like_dislike): add model and serializer classes
>>>>>>> feat(like_dislike): add model and serializer classes
            ],
            options={
                'ordering': ['-created_at', '-updated_at'],
            },
        ),
        migrations.CreateModel(
            name='ArticleImg',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image_url', models.URLField(blank=True, null=True)),
                ('description', models.CharField(db_index=True, max_length=255)),
            ],
        ),
<<<<<<< HEAD
        migrations.CreateModel(
            name='Comments',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment_body', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'get_latest_by': ['created_at'],
            },
        ),
        migrations.CreateModel(
            name='Favourites',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('favourite', models.BooleanField(default=False)),
                ('article', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='article_id', to='articles.Article')),
            ],
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tag', models.CharField(max_length=255)),
                ('slug', models.SlugField(unique=True)),
            ],
        ),
=======
>>>>>>> feat(like_dislike): add model and serializer classes
    ]
