<<<<<<< HEAD
# Generated by Django 2.1.3 on 2018-12-17 12:41
=======
<<<<<<< HEAD
# Generated by Django 2.1.3 on 2018-12-17 10:21
>>>>>>> feat(Articles): Users can can create articles

from django.db import migrations, models
import django.db.models.deletion
=======
<<<<<<< HEAD


from django.db import migrations, models
=======
# Generated by Django 2.1.3 on 2018-12-11 07:32

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
>>>>>>> feat(Articles): Users can can create articles
>>>>>>> feat(Articles): Users can can create articles


class Migration(migrations.Migration):

    initial = True

    dependencies = [
<<<<<<< HEAD
=======
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
>>>>>>> feat(Articles): Users can can create articles
    ]

    operations = [
        migrations.CreateModel(
            name='Article',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
<<<<<<< HEAD
                ('title', models.CharField(db_index=True, max_length=255)),
                ('body', models.TextField(db_index=True)),
                ('description', models.CharField(db_index=True, max_length=255, null=True)),
=======
                ('tittle', models.CharField(db_index=True, max_length=255)),
                ('body', models.TextField(db_index=True)),
                ('description', models.CharField(db_index=True, max_length=255)),
>>>>>>> feat(Articles): Users can can create articles
                ('slug', models.SlugField(max_length=255, unique=True)),
                ('published', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
<<<<<<< HEAD
                ('favourited', models.BooleanField(default=False)),
                ('favouriteCount', models.IntegerField(default=0)),
=======
<<<<<<< HEAD
=======
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
>>>>>>> feat(Articles): Users can can create articles
>>>>>>> feat(Articles): Users can can create articles
            ],
            options={
                'ordering': ['-created_at', '-updated_at'],
            },
        ),
        migrations.CreateModel(
            name='ArticleImg',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
<<<<<<< HEAD
                ('image_url', models.URLField(blank=True, null=True)),
                ('description', models.CharField(db_index=True, max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Comments',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment_body', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'get_latest_by': ['created_at'],
            },
        ),
        migrations.CreateModel(
            name='Favourites',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('favourite', models.BooleanField(default=False)),
                ('article', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='article_id', to='articles.Article')),
            ],
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tag', models.CharField(max_length=255)),
                ('slug', models.SlugField(unique=True)),
            ],
=======
                ('image', models.CharField(blank=True, max_length=255, null=True)),
                ('description', models.CharField(db_index=True, max_length=255)),
            ],
        ),
        migrations.AddField(
            model_name='article',
            name='image',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='articles.ArticleImg'),
>>>>>>> feat(Articles): Users can can create articles
        ),
    ]
